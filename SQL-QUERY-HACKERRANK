
SQL QUERY:
#SELECT ALL
SELECT * FROM CITY;

REVISING THE SELECT QUERY.
SELECT * FROM CITY 
WHERE 
  COUNTRYCODE='USA'
  AND POPULATION>100000;



SELECT NAME
FROM CITY
WHERE
    COUNTRYCODE = 'USA'
    AND POPULATION > 120000;

#SELECT BY ID
SELECT * FROM CITY WHERE ID='1661';

#JAPANESE-CITIES-NAME
SELECT NAME FROM CITY WHERE COUNTRYCODE='JPN';

#JAPANESE-CITIES-ATTRIBUTES
SELECT * FROM CITY WHERE COUNTRYCODE='JPN';

#WEATHER-OBSERVATION-STATION-1
SELECT CITY,STATE FROM STATION;

#WEATHER-OBSERVATION-STATION-3
SELECT DISTINCT(CITY) FROM STATION WHERE mod(ID,2) = 0;

#WEATHER-OBSERVATION-STATION-4
SELECT (COUNT(*) - COUNT(DISTINCT CITY)) FROM STATION

#WEATHER-OBSERVATION-STATION-5
from   station
order by l desc, c asc
limit 1;
select city c, length(city) l
from   station
order by l asc, c asc
limit 1;

#ALPHABETICAL ORDER NAME
SELECT NAME FROM EMPLOYEE ORDER BY NAME;

#WEATHER-OBSERVATION-STATION-6
select city from station where REGEXP_LIKE(city,'^[aeiou]');

#WEATHER-OBSERVATION-STATION-7
SELECT DISTINCT CITY
FROM STATION
WHERE REGEXP_LIKE(CITY, '[aeiou]$', 'i');

#WEATHER-OBSERVATION-STATION-7
select distinct city from station
where (city like 'a%'
or city like 'e%'
or city like 'i%'
or city like 'o%'
or city like 'u%')
and
(
city like '%a'
or city like '%e'
or city like '%i'
or city like '%o'
or city like '%u'
)

#or

SELECT DISTINCT CITY
FROM STATION 
WHERE REGEXP_LIKE(UPPER(CITY), '^[AEIOU]+(.)+[AEIOU]$');

9.
select distinct city from station
where not (city like 'a%'
or city like 'e%'
or city like 'i%'
or city like 'o%'
or city like 'u%')

10.
SELECT DISTINCT CITY FROM STATION
 WHERE NOT(CITY LIKE '%a' OR CITY LIKE '%e' or city like '%i' or city like '%o' or city like '%u')

11.

select distinct city
from station 
where not (city like 'A%' or city like 'E%' or city like 'I%' or city like 'O%' or  city like 'U%') or not (city like '%a' or city like '%e' or city like '%i' or city like '%o' or  city like '%u');

12.
select distinct city
from station 
where not (city like 'A%' or city like 'E%' or city like 'I%' or city like 'O%' or  city like 'U%') and not (city like '%a' or city like '%e' or city like '%i' or city like '%o' or  city like '%u');

#MORE THAN 75 MARKS
SELECT NAME FROM STUDENTS WHERE Marks > 75 ORDER BY RIGHT(NAME, 3), ID ASC;

#SALARY OF EMPLOYEES
SELECT NAME FROM EMPLOYEE WHERE SALARY>2000 AND MONTHS<10 ORDER BY EMPLOYEE_ID ASC;







************************************************88AGGREGATION***************************************************8
#COUNT
SELECT COUNT(NAME) FROM CITY WHERE POPULATION>100000;

#SUM
SELECT SUM(POPULATION) FROM CITY WHERE DISTRICT='California';

#AVERAGE
SELECT AVG(POPULATION) FROM CITY WHERE DISTRICT='California';

#FLOOR
SELECT FLOOR(AVG(POPULATION)) FROM CITY;

#JAPAN POPULATION
SELECT SUM(POPULATION) FROM CITY WHERE COUNTRYCODE='JPN';

#POPULATION DENSITY DIFFERENCE
SELECT (MAX(POPULATION)-MIN(POPULATION)) FROM CITY;


#earning of employees.
SELECT (SELECT MAX(SALARY*MONTHS) FROM EMPLOYEE),(SELECT COUNT(*) FROM EMPLOYEE WHERE SALARY*MONTHS=(SELECT MAX(SALARY*MONTHS) FROM EMPLOYEE));


#WEATHER OBSERVATION STATION 2
select cast(round(sum(lat_n), 2) as decimal(10,2)),cast(round(sum(long_w), 2) as decimal(10,2))from station;


#weather observation station 13
select round(sum(lat_n), 4) from station 
where lat_n > 38.7880 and lat_n < 137.2345;

#WEATHER OBSERVATION STATION 14
select round(max(LAT_N),4) FROM STATION where LAT_N<137.2345;

#WEATHER OBSERVATION STATION 15
SELECT ROUND(LONG_W,4) FROM STATION WHERE LAT_N=(SELECT MAX(LAT_N)
 FROM STATION WHERE LAT_N < 137.2345);

#WEATHER OBSERVATION STATION 16
select round(min(lat_n), 4) 
from station where lat_n > 38.7780;

#WEATHER OBSERVATION STATION 17
SELECT ROUND(LONG_W,4) FROM STATION WHERE LAT_N=(SELECT MIN(LAT_N) 
FROM STATION WHERE LAT_N>38.7780);

##JOIN

#ASIAN POPULATION
SELECT SUM(CITY.POPULATION) FROM CITY INNER JOIN COUNTRY ON CITY.COUNTRYCODE=COUNTRY.CODE WHERE COUNTRY.CONTINENT='ASIA';

SELECT SUM(CITY.POPULATION) FROM CITY, COUNTRY WHERE CITY.COUNTRYCODE=COUNTRY.CODE AND CONTINENT='ASIA';

#AFRICAN CITIES
SELECT CITY.NAME FROM CITY INNER JOIN COUNTRY WHERE CITY.COUNTRYCODE=COUNTRY.CODE AND CONTINENT='AFRICA';


#AVERAGE POPULATION OF EACH CONTINENT
SELECT COUNTRY.CONTINENT, FLOOR(AVG(CITY.POPULATION)) FROM COUNTRY INNER JOIN CITY ON CITY.COUNTRYCODE=COUNTRY.CODE group by country.continent;

************************************************
#advanced select
select Round(ABS(MIN(LAT_N) - MAX(LAT_N)) + ABS(MIN(LONG_W) - MAX(LONG_W)),4)
FROM STATION;

#Occupations
select
    Doctor,
    Professor,
    Singer,
    Actor
from (
    select
        NameOrder,
        max(case Occupation when 'Doctor' then Name end) as Doctor,
        max(case Occupation when 'Professor' then Name end) as Professor,
        max(case Occupation when 'Singer' then Name end) as Singer,
        max(case Occupation when 'Actor' then Name end) as Actor
    from (
            select
                Occupation,
                Name,
                row_number() over(partition by Occupation order by Name ASC) as NameOrder
            from Occupations
         ) as NameLists
    group by NameOrder
    ) as Names


*********************************************************************




